# -*- coding: utf-8 -*-
"""05 Python Control loops

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Np843TctN5pmnQfAeDjIgcUZwFn7kABP

#Control loops

When you want a bunch of code to execute n number of times or until a condition is satisfied, we use control loops. There are 2 major control loops, while loop and for loop

##While loops

While loop is a control loop that will keep executing till the given condition is true. The syntax for it is as follows:



```
while(condition):
    code
    code
    code
```

**Example**
Lets write a code to print numbers from 0 to 9
"""

x=0                     # we start with the number zero

while (x<10):           #we will keep executing this loop as long as x is below 10
  print(x)              #print the x value
  x=x+1                 #increase the x value so that we can print the next value

"""##For loops

We use for loops when we want to execute something N no of times or when we want to go through a collection of items and do something with the individual items in that collection

for example, we can consider the word "hello". This can be considered as a collection of letters. We will use this knowledge shortly, but before that, lets see how to write a for loop.

To write a for loop, we follow the format:



```
for X in Y:
    code
    code
    code
```
Here, Y is always a collection of items. For every iteration, one item from this collection is stored in X. For the next iteration, the next item is stored in X and so on till all the items in Y are exhausted. We can then use this X in our code to do any kind of operations.

Lets go to our previous example of the word "hello" and print all the letters one by one



"""

word= "hello"

for letter in word:
  print(letter)

"""###Range function

Sometimes we dont have a collection of items to use in our for loop. Instead we know the number of times we want to run the loop. In such cases we use a range function. 

The range function gives a collection of numbers starting from 0 to a given number, incrementing in steps of 1. This is the default behaviour which we can change, if required 

The range function has the following structure:

```
range(start, stop, steps)

start(optional): This is used to specify from where to start the range of numbers. Incase we dont specify this, it is taken as 0

stop (mandatory): This is used to specify till where we want the range of numbers to end. Note that the last number will be one less than the stop number (the stop number is not included)

step (optional): This is used to specify how much we want to increment the numbers. Incase we dont specify this, it is taken as 1.
```

we can use range function in for loops in the following way:



"""

for i in range(6):                # this loop will run 6 times, starting from 0 to 5 in increments of 1
  print(i)

#we can also give our own start and step values if needed

for i in range(5,25,3):          # this will give a range of numbers from 5 to 24 in increments of 3
  print(i)

"""## Do it yourself

write a code to print all the even numbers from 162 to 178. 
"""

for i in range (162,179,2):
    print(i)