# -*- coding: utf-8 -*-
"""04 Python Conditionals

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1a17iTHbn-z01tu0hVVoM-NRff9dvA_3g

#Python Conditionals

##if statement

An if statement in python is used when we want to execute a bunch of code only when a certain condition is satisfied.

The syntax for an if block is as follows

```
if (condition):
    code       #this region contains the code that will execute if the condition above is true
    code       #note that the code that is inside the if block is indented. 
    code       #This tells python that the indented block of code belongs inside this if block
```

Conditions can be denoted through following ways



```
- Equals: a == b
- Not Equals: a != b
- Less than: a < b
- Less than or equal to: a <= b
- Greater than: a > b
- Greater than or equal to: a >= b
```

## elif statement 

When we want to check more than 1 condition, we use the elif keyword.
The elif keyword is pythons way of saying "if the previous conditions were not true, then try this condition".

The syntax for an elif block is as follows

```

if (condition):
    code       #this region contains the code that will execute if the condition above is true
    code       #note that the code that is inside the if block is indented. 
    code       #This tells python that the indented block of code belongs inside this if block
    
elif (condition):
    code      
    code       
    code       
```

##else statement

if none of the above if/elif conditions are true, then the code inside the else block will get executed. The else block has no condition.

The syntax for an elif block is as follows

```

if (condition):
    code       #this region contains the code that will execute if the condition above is true
    code       #note that the code that is inside the if block is indented. 
    code       #This tells python that the indented block of code belongs inside this if block
    
elif (condition):
    code      
    code       
    code   

else:
    code
    code
    code    
```

**Example**

Lets write a program to check if a given number is positive, negative or zero
"""

#given

x = -50

if (x<0):
  print('number is negative')

elif (x>0):
  print('number is positive')

else:
  print('number is zero')

"""##AND / OR keywords

When we want to use a combination of conditions in the same if or elif block, we use the and/or keyword.

**and Keyword** is used when we want to satisfy both the conditions

```
if (condition1 and condition2):
    code
    code
    code
```

**or Keyword** is used when we want to execute a block of code if either one of the condition is satisfied.

```
if (condition1 or condition2):
    code
    code
    code
```

**Example**
Lets write a code where if a user is female or senior citizen, they get a blue pass. Also if a user is male and below 60 then they get a yellow pass.
"""

#given
age=75
gender='male'

if (gender=='female' or age>=60):
  print('congrats you got a blue pass')

elif(gender=='male' and age<60):
  print('congrats you got a yellow pass')

else:
  print('sorry you dont get a pass')

"""##pass statement

if/elif statements cannot be empty, but if you for some reason have an if/elif statement with no content, put in the pass statement to avoid getting an error.

```
if (condition):
    pass
```

##Nested if 

Incase we want to check for condition B after condition A is satisfied, we can use an if block inside the 1st if block. This is called nesting.


```
if (condition A):
    code
    code
    if (condition B):
        code
        code
        code
```
Note that the inside if block is indented further inside as compared to the outside if block. This helps identify which lines of code belong to which block.

**Example**

Lets check if a number is greater than 0 and output positive. Next if the number is greater than 100, lets print big.
"""

#given
num=500

if (num>0):
  print('positive')
  if (num>100):
    print('big')

"""##Do it yourself

Do the following tasks:
* check if the given number is <500, between 500 to 1000 or >1000
* if the number is 500, use a pass statement
* if the number is 1000, check if it is an even or odd number
"""

#given
num = 1000

if (num<500):
  print('<500')

elif (num>500 and num<1000):
  print('between 500 and 1000')

elif (num>1000):
  print('>1000')

elif (num==500):
  pass

elif (num==1000):

  if (num%2==0):
    print('even')
    
  else:
    print('odd')