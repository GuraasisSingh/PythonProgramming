# -*- coding: utf-8 -*-
"""03 Python Strings

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/12j3WPv-YeTX6GSEz-OwxMhf-7lXuCYSD

#Strings

Letters, words and sentences in python are called as strings. You can denote a string by writing it inside single or double quotes.

**example**



```
word1 = "India"

word2 = 'goa'

sentence1= "I am Batman"
```

## Operations on strings

###Accessing a String

Strings can be thought of as individual letters arranged one after the other. So we can give each letter a number. If we consider the string 'Hello', H is the 1st letter, E is the 2nd letter and so on. We can call this **`index`** of a particular letter. However, in most programming languages, we start counting from 0. So now we can say that the index of H is 0, E is 1 and so on


```
Letters: H e l l o
Index:   0 1 2 3 4
```

To access a part of a string, we write the name of the variable followed by the index inside square brackets

**Example**
"""

word= 'hello'
print(word[1])

"""Indexes can also be negative. We start negative indexes from the back.

```
Letters: H  e  l  l  o
Index:  -5 -4 -3 -2 -1
```

**Example**
"""

word='hello'
print(word[-3])

"""###Slicing a string

Just like how we accessed a letter from a string, we can also access a bunch of consecutive letters from a string. This operation is called slicing

To slice a string, we have to follow the below syntax:


```
name_of_string [start_index : stop_index]
```

Note that start of the range is included but end of this range is not included

**Example**


"""

word='Superman'
print(word[2:7])      #note that index number 2 got printed but index number 7 didnt

"""Also, when the start of the range is 0 or when the end of the range is the very end of the string, we do not mention it

**Example**
"""

word="Superman"

print(word[:4])         # if we do not mention the start, it is considered as 0

print(word[4:])         #if we do not mention the end, it is considered tillthe end of the string

"""###Concatenation of Strings

Just like adding 2 numbers, you can add 2 strings too. This is called concatenation of strings.

To add 2 strings, simply use a '+' symbol between the 2 strings

**Example**

"""

final_string="Virat"+"Kohli"

print(final_string)

"""### String Formatting

Sometimes we want to create dynamic strings in which certain words are sourced from variables. Therefore whenever the variable will change, the string will change with it. One way to do this is to concatenate the strings and the variables.

for example:
"""

first_name = 'john'
last_name='doe'

# to create a sentence 'My first name is john and my last name is doe', 
# we can concatenate the strings and the variables

sentence='My first name is ' + first_name + ' and my last name is ' + last_name
print(sentence)

"""However there is a better way to get the same effect through formatted strings

We can do that by writting an 'f' before the string. Whenever we  want to include a variable in such a string, we can enclose it inside curly brackets

for example:
"""

sentence= f'My first name is {first_name} and my last name is {last_name}'
print(sentence)

"""##**Try it yourself**

Do the following tasks:
* store the following line sentence inside a variable: 'My favorite color is red'
* print the variable
* print the letter that is at index no 10
* print the letters from 5th to 12th index
* create a variable called color and assign it your favorite color
* using formatted strings, print 'My favorite color is' followed by your color variable

**Solution**
"""

sentence=  'My favorite color is red'

print(sentence)
print(sentence[10])
print(sentence[5:13])  #if we want to include the 12th index, our end range should be 13

color='yellow'
print(f'My favorite color is {color}')